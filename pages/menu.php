<?php 
include '../includes/header.php'; 
require_once '../config/db_connect.php';

// Get all menu items
$result = $conn->query("SELECT * FROM menu ORDER BY is_best_seller DESC, name ASC");
$menuItems = [];
while ($row = $result->fetch_assoc()) {
    $menuItems[] = $row;
}
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Menu - Ellen's Food House</title>
    <link rel="stylesheet" href="../assets/css/menu.css">
</head>
<body>

<!-- Main Menu Content -->
<main class="main-content">
    <?php if (!empty($menuItems)): ?>
    <section class="menu-section">
        <div class="container">
            <h2 class="section-title">Our Menu</h2>
            
            <!-- Search and Filter Controls -->
            <div class="menu-controls">
                <div class="search-container">
                    <input type="text" id="searchInput" placeholder="Search menu items..." class="search-input">
                    <i class="fas fa-search search-icon"></i>
                </div>
                
                <div class="filter-container">
                    <button class="filter-btn active" data-filter="all">
                        <i class="fas fa-th-large"></i> All Items
                    </button>
                    <button class="filter-btn" data-filter="best-seller">
                        <i class="fas fa-star"></i> Best Sellers
                    </button>
                    <button class="filter-btn" data-filter="regular">
                        <i class="fas fa-utensils"></i> Regular Items
                    </button>
                </div>
            </div>
            
            <!-- No Results Message -->
            <div id="noResults" class="no-results" style="display: none;">
                <i class="fas fa-search"></i>
                <h3>No items found</h3>
                <p>Try adjusting your search or filter criteria</p>
            </div>
            
            <div class="menu-grid" id="menuGrid">
                <?php foreach ($menuItems as $index => $item): ?>
                    <div class="menu-item <?php echo $item['is_best_seller'] ? 'featured best-seller' : 'regular'; ?>" 
                         data-name="<?php echo strtolower(htmlspecialchars($item['name'])); ?>"
                         data-category="<?php echo $item['is_best_seller'] ? 'best-seller' : 'regular'; ?>"
                         data-index="<?php echo $index; ?>">
                        <?php if ($item['image_path']): ?>
                            <div class="item-image" onclick="openModal('<?php echo htmlspecialchars($item['image_path']); ?>', '<?php echo htmlspecialchars($item['name']); ?>', '<?php echo number_format($item['price'], 2); ?>')">
                                <img src="../uploads/menu/<?php echo htmlspecialchars($item['image_path']); ?>" 
                                     alt="<?php echo htmlspecialchars($item['name']); ?>">
                                <?php if ($item['is_best_seller']): ?>
                                    <div class="bestseller-badge">Best Seller</div>
                                <?php endif; ?>
                            </div>
                        <?php endif; ?>
                        <div class="item-content">
                            <h3 class="item-name"><?php echo htmlspecialchars($item['name']); ?></h3>
                            <p class="item-price">â‚±<?php echo number_format($item['price'], 2); ?></p>
                        </div>
                    </div>
                <?php endforeach; ?>
            </div>
            
            <!-- Pagination -->
            <div class="pagination-container" id="paginationContainer">
                <div class="page-info">
                    <span id="pageInfo">Showing 1-16 of <?php echo count($menuItems); ?> items</span>
                </div>
                <ul class="pagination" id="pagination">
                    <!-- Pagination will be generated by JavaScript -->
                </ul>
            </div>
        </div>
    </section>
    <?php endif; ?>

    <?php if (empty($menuItems)): ?>
    <section class="menu-section">
        <div class="container">
            <div class="empty-menu">
                <h2>Menu Coming Soon</h2>
                <p>We're working on bringing you an amazing menu experience.</p>
            </div>
        </div>
    </section>
    <?php endif; ?>
</main>

<!-- Image Modal -->
<div id="imageModal" class="image-modal">
    <span class="modal-close" onclick="closeModal()">&times;</span>
    <div class="modal-content">
        <img id="modalImage" src="" alt="">
        <div class="modal-caption">
            <h3 id="modalTitle"></h3>
            <div class="price" id="modalPrice"></div>
        </div>
    </div>
</div>

<?php include '../includes/footer.php'; ?>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchInput');
    const filterBtns = document.querySelectorAll('.filter-btn');
    const menuItems = document.querySelectorAll('.menu-item');
    const menuGrid = document.getElementById('menuGrid');
    const noResults = document.getElementById('noResults');
    const paginationContainer = document.getElementById('paginationContainer');
    const pagination = document.getElementById('pagination');
    const pageInfo = document.getElementById('pageInfo');
    
    let currentFilter = 'all';
    let currentPage = 1;
    const itemsPerPage = 16;
    let filteredItems = [];
    
    // Initialize
    updateFilteredItems();
    
    // Search functionality
    searchInput.addEventListener('input', function() {
        currentPage = 1;
        updateFilteredItems();
    });
    
    // Filter functionality
    filterBtns.forEach(btn => {
        btn.addEventListener('click', function() {
            // Remove active class from all buttons
            filterBtns.forEach(b => b.classList.remove('active'));
            // Add active class to clicked button
            this.classList.add('active');
            
            currentFilter = this.getAttribute('data-filter');
            currentPage = 1;
            updateFilteredItems();
        });
    });
    
    function updateFilteredItems() {
        const searchTerm = searchInput.value.toLowerCase().trim();
        filteredItems = [];
        
        menuItems.forEach(item => {
            const itemName = item.getAttribute('data-name');
            const itemCategory = item.getAttribute('data-category');
            
            let matchesSearch = itemName.includes(searchTerm);
            let matchesFilter = currentFilter === 'all' || itemCategory === currentFilter;
            
            if (matchesSearch && matchesFilter) {
                filteredItems.push(item);
            }
        });
        
        displayItems();
        updatePagination();
    }
    
    function displayItems() {
        // Hide all items first
        menuItems.forEach(item => {
            item.style.display = 'none';
        });
        
        if (filteredItems.length === 0) {
            noResults.style.display = 'block';
            paginationContainer.style.display = 'none';
            return;
        }
        
        noResults.style.display = 'none';
        paginationContainer.style.display = 'flex';
        
        // Calculate start and end index for current page
        const startIndex = (currentPage - 1) * itemsPerPage;
        const endIndex = Math.min(startIndex + itemsPerPage, filteredItems.length);
        
        // Show items for current page
        for (let i = startIndex; i < endIndex; i++) {
            filteredItems[i].style.display = 'block';
            filteredItems[i].style.animation = 'fadeIn 0.3s ease-in';
        }
        
        // Update page info
        const totalItems = filteredItems.length;
        const showingStart = startIndex + 1;
        const showingEnd = endIndex;
        pageInfo.textContent = `Showing ${showingStart}-${showingEnd} of ${totalItems} items`;
    }
    
    function updatePagination() {
        const totalPages = Math.ceil(filteredItems.length / itemsPerPage);
        pagination.innerHTML = '';
        
        if (totalPages <= 1) {
            paginationContainer.style.display = 'none';
            return;
        }
        
        paginationContainer.style.display = 'flex';
        
        // Previous button
        const prevLi = document.createElement('li');
        prevLi.className = currentPage === 1 ? 'disabled' : '';
        const prevLink = document.createElement('a');
        prevLink.href = '#';
        prevLink.innerHTML = '<i class="fas fa-chevron-left"></i>';
        prevLink.onclick = (e) => {
            e.preventDefault();
            if (currentPage > 1) {
                currentPage--;
                displayItems();
                updatePagination();
            }
        };
        prevLi.appendChild(prevLink);
        pagination.appendChild(prevLi);
        
        // Page numbers
        const maxVisiblePages = 5;
        let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
        let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);
        
        if (endPage - startPage + 1 < maxVisiblePages) {
            startPage = Math.max(1, endPage - maxVisiblePages + 1);
        }
        
        if (startPage > 1) {
            addPageButton(1);
            if (startPage > 2) {
                const ellipsis = document.createElement('li');
                ellipsis.innerHTML = '<span>...</span>';
                pagination.appendChild(ellipsis);
            }
        }
        
        for (let i = startPage; i <= endPage; i++) {
            addPageButton(i);
        }
        
        if (endPage < totalPages) {
            if (endPage < totalPages - 1) {
                const ellipsis = document.createElement('li');
                ellipsis.innerHTML = '<span>...</span>';
                pagination.appendChild(ellipsis);
            }
            addPageButton(totalPages);
        }
        
        // Next button
        const nextLi = document.createElement('li');
        nextLi.className = currentPage === totalPages ? 'disabled' : '';
        const nextLink = document.createElement('a');
        nextLink.href = '#';
        nextLink.innerHTML = '<i class="fas fa-chevron-right"></i>';
        nextLink.onclick = (e) => {
            e.preventDefault();
            if (currentPage < totalPages) {
                currentPage++;
                displayItems();
                updatePagination();
            }
        };
        nextLi.appendChild(nextLink);
        pagination.appendChild(nextLi);
    }
    
    function addPageButton(pageNum) {
        const li = document.createElement('li');
        li.className = pageNum === currentPage ? 'active' : '';
        
        if (pageNum === currentPage) {
            li.innerHTML = `<span>${pageNum}</span>`;
        } else {
            const link = document.createElement('a');
            link.href = '#';
            link.textContent = pageNum;
            link.onclick = (e) => {
                e.preventDefault();
                currentPage = pageNum;
                displayItems();
                updatePagination();
            };
            li.appendChild(link);
        }
        
        pagination.appendChild(li);
    }
});

// Modal functionality
function openModal(imagePath, title, price) {
    const modal = document.getElementById('imageModal');
    const modalImage = document.getElementById('modalImage');
    const modalTitle = document.getElementById('modalTitle');
    const modalPrice = document.getElementById('modalPrice');
    
    // Clear previous image to prevent flickering
    modalImage.src = '';
    modalImage.style.opacity = '0';
    
    // Set new image source
    modalImage.src = '../uploads/menu/' + imagePath;
    modalTitle.textContent = title;
    modalPrice.textContent = 'â‚±' + price;
    
    // Show modal
    modal.style.display = 'block';
    document.body.style.overflow = 'hidden';
    
    // Fade in image when loaded
    modalImage.onload = function() {
        modalImage.style.opacity = '1';
        modalImage.style.transition = 'opacity 0.3s ease';
    };
}

function closeModal() {
    const modal = document.getElementById('imageModal');
    const modalImage = document.getElementById('modalImage');
    
    modal.style.display = 'none';
    document.body.style.overflow = 'auto';
    
    // Clear image source to free memory
    modalImage.src = '';
    modalImage.onload = null;
}

// Close modal when clicking outside the image content
document.getElementById('imageModal').addEventListener('click', function(e) {
    if (e.target === this || e.target.classList.contains('modal-content')) {
        closeModal();
    }
});

// Close modal with Escape key
document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        closeModal();
    }
});
</script>

<!-- Add FontAwesome if not already included -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</body>
</html>
